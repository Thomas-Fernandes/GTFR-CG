@use "sass:map";

@use "./variables" as *;

@mixin apply-theme($theme-map) {
  * {
    transition: all 0.3s ease, font-weight 0s;

    &:before {
      transition: all 0.3s ease, font-weight 0s;
    }
    &:after {
      transition: all 0.3s ease, font-weight 0s;
    }
  }

  p, button, .button, .action-button {
    color: map.get($theme-map, text-color);
  }

  hr {
    box-shadow: 0 0 0.1rem 0.005rem map.get($theme-map, text-color);
  }

  textarea, input[type="text"] {
    background: map.get($theme-map, background-color);
    color: map.get($theme-map, text-color);
  }

  #home {
    .stats-board {
      background: map.get($theme-map, background-color);
    }
  }

  #lyrics {
    .lyrics-textarea {
      background-image: map.get($theme-map, lyrics-overflow-marker);
    }
  }
}

$light-theme: (
  text-color: $secondary-3,
  background-color: $secondary-1,
  lyrics-overflow-marker: linear-gradient(
    to right,
    transparent calc(0.92ch * ($lyrics--character-limit - 1)),
    $text-limit--dark calc(0.92ch * ($lyrics--character-limit - 1)),
    $text-limit--dark calc(0.92ch * $lyrics--character-limit),
    transparent calc(0.92ch * $lyrics--character-limit)
  ),
);

$dark-theme: (
  text-color: $secondary-1,
  background-color: $secondary-3,
  lyrics-overflow-marker: linear-gradient(
    to right,
    transparent calc(0.92ch * ($lyrics--character-limit - 1)),
    $text-limit--light calc(0.92ch * ($lyrics--character-limit - 1)),
    $text-limit--light calc(0.92ch * $lyrics--character-limit),
    transparent calc(0.92ch * $lyrics--character-limit)
  ),
);